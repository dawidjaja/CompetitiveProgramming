<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0046)http://www.toki.or.id/archive/algoritmika.html --><HTML><HEAD><TITLE>OSN 2006 Informatika/Komputer</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<STYLE>BODY {
	FONT-SIZE: 10pt; COLOR: #000022; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
TABLE {
	FONT-SIZE: 10pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
SELECT {
	FONT-SIZE: 10pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
INPUT {
	FONT-SIZE: 10pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
BUTTON {
	FONT-SIZE: 10pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H1 {
	FONT-SIZE: 16pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H2 {
	FONT-SIZE: 14pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H3 {
	FONT-SIZE: 12pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
H4 {
	FONT-SIZE: 10pt; FONT-FAMILY: Geneva, Arial, Helvetica, sans-serif
}
</STYLE>

<META content="MSHTML 6.00.2900.2180" name=GENERATOR></HEAD>
<BODY>
<CENTER>
<H1>Part 2: Algoritmika</H1>
<H3>Pilihan berganda</H3>Waktu: 06 September 2006, 10:30:00-13:30:00 
<TABLE>
  <TBODY>
  <TR>
    <TD>
      <UL>
        <LI>Jawaban Betul: 4 
        <LI>Jawaban Salah: -1 
        <LI>Jawaban Kosong: 0 
        <LI>Nilai akhir dipetakan ke 20 - 
100</LI></UL></TD></TR></TBODY></TABLE></CENTER>
<HR>

<H3>Bagian Deskripsi</H3>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn007.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Algoritma dengan pseudopascal berikut dimaksudkan untuk menjumlahkan 
      bilangan bilangan pada suatu array <FONT face=courier>tabeldata</FONT> 
      hanya pada elemen array bernomor indeks kelipatan 3 (yaitu: 3, 6, 9, 
      dst...) sampai dengan elemen ke 30 dan mencetak hasilnya ke layar. 
      Diketahui, array <FONT face=courier>tabeldata</FONT> berindeks dari 1 
      sampai dengan 40. <PRE>sum := 0;
 // inisialisasi i
while i &lt; hargabatas do 
begin
    sum := sum + tabeldata[i];
    //increment i
end;
writeln(sum);
</PRE></TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn008.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>berikut ini struktur <B>if-then-else</B> <PRE>if (a and not (not c and not b)) or not ((c and b) or not a) 
then  writeln('merah')
else  writeln('putih');
</PRE></TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn009.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Perhatikan program berikut: <PRE>// array X berisi n bilangan
 dengan index dari 1 s.d. n

// fungsi Max(a,b) adalah mencari bilangan terbesar dari a atau b
ts := 0;
ms := 0;
for i := 1 to n do
begin
   ts := Max(0, X[i] + ts); 
   ms := Max(ts, ms);    
end;
writeln(ms);
</PRE></TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn010.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Perhatikan algoritma berikut. <PRE>procedure Bingo(t);
begin
    if (t &lt; 2) then 
        writeln('Bingo!')

    else 
    begin
        Bingo(t-1);
        Bingo(t-2)
    end;
end;
</PRE></TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn011.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Perhatikan algoritma berikut. <PRE>procedure Boo(t: integer);
begin
    if (t &gt; 0) then 
    begin
        for i := 1 to t do writeln(\'Boo!\');
        
       Boo(t div 2); // t dibagi 2 dan dibulatkan ke bawah
    end;
end;
</PRE></TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn012.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Suatu array X berindeks dari 1 s.d. 10 dan setiap elemennya berisi 
      huruf-huruf berurutan dari 'a' sampai 'j'. </TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn013.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Pak Umar adalah petugas parkir kendaraan-kendaraan berat. Lebar 
      kendaraan-kendaraan itu bermacam-macam (berukuran bilangan-bilangan bulat 
      positif sudah termasuk lebar celah antar kendaraan saat di parkir) 
      sementara tempat parkirnya berupa satu lapangan memanjang dari kiri ke 
      kanan sepanjang 100 meter yang hanya cukup untuk satu baris 
      kendaraan-kendaraan itu. Dengan keluar masuknya kendaraan setiap saat, Pak 
      Umar mengatur penempatannya berdasarkan "tempat mana yang pertama kali 
      ditemukan" jika ditelusuri dari sebelah kiri. Berdasarkan algoritma 
      tersebut, saat area parkir masih kosong maka setiap kendaraan yang parkir 
      akan ditempatkan mulai dari terkiri ke kanan. Karena ada kendaraan yang 
      juga keluar area parkir maka terdapat ruang kosong yang ditinggalkan 
      kendaraan tersebut. Jika kendaraan berikutnya menemukan ruang itu sebagai 
      yang kosong pertama, dan kendaraan itu lebih kecil atau sama dengan ruang 
      kosong itu, maka kendaraan itu diparkirkan disitu. Jika tidak, maka dicari 
      ruang kosong berikutnya di sebelah kanannya. Kendaraan yang diparkir tidak 
      dapat digeser-geserkan karena beratnya dan kunci kontaknya dibawa 
      masing-masing supirnya pergi saat kendaraan itu diparkir. Suatu hari, 
      dimulai dari tempat parkir yang kosong, berturut-turut terjadi 
      keluar/masuk kendaraan dengan nomor kendaraan dan ukurannya (ditulis "no x 
      (lebar)") sebagai berikut masuk no 1 (20m), masuk no 2 (40m), masuk no 3 
      (15m), keluar no 2, masuk no 4 (20m). <BR><IMG 
      src="Soal Teori OSN 2006 Informatika [TOKI] _part2_files/parkir.jpg"> 
  </TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn014.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Dokter Eko Eriyatno dalam pelayanan terhadap pasiennya, menerapkan 
      sistem antrian menggunakan prioritas bagi para pasien yang menunggu di 
      ruang tunggu prakteknya. Aturannya antriannya adalah sebagai berikut. 
      Seorang pasien yang baru datang dengan prioritas yang lebih tinggi akan 
      didahulukan di muka pasien yang sudah datang lebih dahulu tetapi dengan 
      prioritas yang lebih rendah. Jika sudah ada pasien yang sama atau lebih 
      tinggi prioritasnya, maka pasien yang baru datang itu akan antri di 
      belakangnya. <BR>Prioritasnya ditentukan di dasarkan pada tingkat 
      kegawatan penyakit si pasien yang dilakukan oleh juru rawat pembantunya 
      saat setiap pasien mendaftar untuk pemeriksaan. Prioritas dinyatakan 
      dengan bilangan bulat positif; semakin tinggi prioritasnya maka 
      bilangannya semakin besar. </TD></TR></TBODY></TABLE>
<TABLE>
  <TBODY>
  <TR>
    <TD colSpan=2><B>Deskripsi osn015.html</B></TD></TR>
  <TR>
    <TD width="5%">&nbsp;</TD>
    <TD>Pak Fauzan senang bermain kartu solitaire: 7 lembar kart-kartu pertama 
      berturut-turut ditempatkan pada kolom 1 sampai 7, 6 lembar kartu-kartu 
      berikutnya berturut-turut ditempatkan pada kolom 7 sampai 2 di atas 
      kartu-kartu pertama yang ditempatkan pada masing-masing kolom, 5 lembar 
      berikutnya berturut-turut ditempatkan pada kolom 3 sampai 7 di atas 
      kartu-kartu kedua yang ditempatkan pada masing-masing kolom, 4 lembar 
      berikutnya berturut-turut ditempatkan pada kolom 7 sampai 4 di atas 
      kartu-kartu kedua yang ditempatkan pada masing-masing kolom, dan 
      seterusnya hingga kartu ke 28 ditempatkan pada kolom ke 7. 
</TD></TR></TBODY></TABLE>
<HR>

<H3>Bagian Pertanyaan</H3>
<OL type=1>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn007.html</B> di atas) Berapakah 
  harga untuk menginisialisasi <FONT face=courier>i</FONT> pada baris "<FONT 
  face=courier>// inisialisasi i</FONT>" agar algoritma bekerja seperti yang 
  diharapkan? 
  <OL type=A>
    <LI>3 
    <LI>0 
    <LI>1 
    <LI>2 
    <LI>4 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn007.html</B> di atas) Perintah 
  manakah yang harus diberikan menggantikan "<FONT face=courier>// increment 
  i</FONT>" ? 
  <OL type=A>
    <LI><FONT face=courier>i := i + 3</FONT> 
    <LI><FONT face=courier>i := i + 1</FONT> 
    <LI><FONT face=courier>i := i - 1</FONT> 
    <LI><FONT face=courier>i := 3</FONT> 
    <LI><FONT face=courier>i := i + 2</FONT> </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn007.html</B> di atas) Berapakah 
  variabel <FONT face=courier>hargabatas</FONT> seharusnya diberi harga agar 
  algoritma bekerja seperti yang diharapkan? 
  <OL type=A>
    <LI>31 
    <LI>25 
    <LI>30 
    <LI>35 
    <LI>40 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn007.html</B> di atas) Apa yang akan 
  dicetak oleh algoritma jika setiap elemen array berisi harga yang sama dengan 
  nomor indeksnya jika algoritma dituliskan sebagaimana yang seharusnya? 
  <OL type=A>
    <LI>165 
    <LI>135 
    <LI>145 
    <LI>176 
    <LI>30 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn008.html</B> di atas) Agar 
  algoritma itu selalu menuliskan 'merah' maka kondisi yang tepat adalah 
  <OL type=A>
    <LI><FONT face=courier>a</FONT> dan <FONT face=courier>c</FONT> keduanya 
    harus true sementara <FONT face=courier>b</FONT> tidak penting 
    <LI><FONT face=courier>b</FONT> berharga true yang lain tidak penting 
    <LI><FONT face=courier>a</FONT> berharga true yang lain tidak penting 
    <LI><FONT face=courier>c</FONT> berharga true yang lain tidak penting 
    <LI><FONT face=courier>b</FONT> berharga false yang lain tidak penting 
  </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn008.html</B> di atas) Agar 
  algoritma selalu menuliskan 'putih' maka kondisi yang tepat adalah <FONT 
  color=red>[Soal ini dianulir karena terdapat lebih dari satu yang 
  benar]</FONT> 
  <OL type=A>
    <LI><FONT face=courier>b</FONT> harus false sementara yang lain harus true 
    <LI><FONT face=courier>b</FONT> berharga true yang lain tidak penting 
    <LI><FONT face=courier>a</FONT> dan <FONT face=courier>c</FONT> keduanya 
    harus true sementara <FONT face=courier>b</FONT> tidak penting 
    <LI><FONT face=courier>a</FONT> dan <FONT face=courier>b</FONT> keduanya 
    harus true sementara <FONT face=courier>c</FONT> tidak penting 
    <LI><FONT face=courier>b</FONT> dan <FONT face=courier>c</FONT> keduanya 
    harus true sementara <FONT face=courier>a</FONT> tidak penting </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn008.html</B> di atas) Pemeriksaan 
  ekspresi lojik (di antara notasi <B>if</B> dan <B>then</B>) tersebut bisa 
  digantikan dengan ekspresi berikut 
  <OL type=A>
    <LI><FONT face=courier>(a and (c or b)) or (not (c and b) and a)</FONT> 
    <LI><FONT face=courier>((a &lt;&gt; c) or (a = b) or b)</FONT> 
    <LI><FONT face=courier>((a = c) and (a &lt;&gt; b) and not b)</FONT> 
    <LI><FONT face=courier>(a and c or b) or (not c or not b and a)</FONT> 
    <LI><FONT face=courier>a and not b and not c</FONT> </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn008.html</B> di atas) Jika <FONT 
  face=courier>a</FONT> berharga false maka 
  <OL type=A>
    <LI>algoritma selalu menuliskan 'putih' apapun harga <FONT 
    face=courier>b</FONT> dan <FONT face=courier>c</FONT> 
    <LI>algoritma selalu menuliskan 'merah' apapun harga <FONT 
    face=courier>b</FONT> dan <FONT face=courier>c</FONT> 
    <LI>algoritma selalu menuliskan 'putih' jika salah satu lainnya true 
    <LI>algoritma selalu menuliskan 'putih' <FONT face=courier>b</FONT> dan 
    <FONT face=courier>c</FONT> true 
    <LI>algoritma selalu menuliskan 'putih' <FONT face=courier>b</FONT> dan 
    <FONT face=courier>c</FONT> false </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn009.html</B> di atas) Jika array 
  berisi harga-harga sebagai berikut: 1, -3, 4, -2, -1, 6 (berarti juga <FONT 
  face=courier>n</FONT> berharga 6) maka algoritma akan mencetak harga? 
  <OL type=A>
    <LI>7 
    <LI>4 
    <LI>2 
    <LI>6 
    <LI>-6 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn009.html</B> di atas) Jika array 
  berisi harga-harga sebagai berikut: 1, -1, 1, -1, 1, -1, 1 (berarti juga <FONT 
  face=courier>n</FONT> berharga 7) maka algoritma akan mencetak harga? 
  <OL type=A>
    <LI>1 
    <LI>-1 
    <LI>4 
    <LI>-3 
    <LI>7 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn009.html</B> di atas) Jika fungsi 
  <FONT face=courier>Max(a,b)</FONT> diimplementasikan manakah yang anda pilih 
  paling benar dan paling efisien menurut waktu eksekusi? 
  <OL type=A>
    <LI><FONT face=courier>if (a &gt; b) then Max := a else Max := b;</FONT> 
    <LI><FONT face=courier>if (a &lt; b) then Max := a else Max := b;</FONT> 
    <LI><FONT face=courier>Max := b; if (a &gt; b) then Max := a;</FONT> 
    <LI><FONT face=courier>Max := a; if (a &gt; b) then Max := b;</FONT> 
    <LI><FONT face=courier>if ((a - b) &gt; 0) then Max := a else Max := 
    b;</FONT> </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn009.html</B> di atas) Jika jumlah 
  data adalah <FONT face=courier>N</FONT> maka berapakalikah fungsi <FONT 
  face=courier>Max(a,b)</FONT> akan dipanggil selama algoritma itu dijalankan? 
  <OL type=A>
    <LI>2<I>N</I> 
    <LI><I>N</I> 
    <LI><I>N</I>/2 
    <LI><I>N</I><SUP>2</SUP> 
    <LI>log(<I>N</I>) </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn010.html</B> di atas) Berapa 
  kalikah 'Bingo!' dituliskan jika procedure tersebut dipanggil dengan <FONT 
  face=courier>Bingo(6)</FONT>? 
  <OL type=A>
    <LI>13 
    <LI>8 
    <LI>6 
    <LI>1 
    <LI>2 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn010.html</B> di atas) Untuk 
  menghasilkan tulisan 'Bingo!' lebih dari 100 kali procedure harus dipanggil 
  dengan cara bagaimana? <FONT color=red>[Soal ini dianulir karena terdapat 
  lebih dari satu yang benar]</FONT> 
  <OL type=A>
    <LI><FONT face=courier>Bingo(11)</FONT> 
    <LI><FONT face=courier>Bingo(100)</FONT> 
    <LI><FONT face=courier>Bingo(10)</FONT> 
    <LI><FONT face=courier>Bingo(15)</FONT> 
    <LI><FONT face=courier>Bingo(5)</FONT> </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn011.html</B> di atas) Berapa 
  kalikah 'Boo!' dituliskan jika procedure tersebut dipanggil dengan Boo(k) 
  dimana k adalah suatu bilangan 2<SUP>N</SUP>? 
  <OL type=A>
    <LI>2<SUP><I>N</I>+1</SUP>-1 
    <LI>2<SUP><I>N</I></SUP>-1 
    <LI>2<SUP><I>N</I>+1</SUP> 
    <LI>2<I>N</I> 
    <LI><I>N</I> </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn011.html</B> di atas) Pemanggilan 
  Boo(1000) menghasilkan pencetakan "Boo!" sebanyak? 
  <OL type=A>
    <LI>1993 baris 
    <LI>2000 baris 
    <LI>1000 baris 
    <LI>500 baris 
    <LI>10 baris </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn011.html</B> di atas) Untuk 
  menghasilkan pencetakan "Boo!" sebanyak 200 kali memerlukan pemanggilan 
  dengan? 
  <OL type=A>
    <LI>Boo(102) 
    <LI>Boo(200) 
    <LI>Boo(100) 
    <LI>Boo(16) 
    <LI>Boo(1000) </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn012.html</B> di atas) Suatu 
  algoritma bekerja pada array tersebut sbb <PRE>for i := 1 to 10 do
    swap(X[i],X[10-i+1]; // prosedur swap menukarkan 
                         // kedua isi elemen array tsb
for i := 1 to 10 do write(X[i]); 
</PRE>Hasil yang dicetak adalah 
  <OL type=A>
    <LI>abcdefghij 
    <LI>jihgfedcba 
    <LI>ebacdhfgij 
    <LI>fghijabcde 
    <LI>cdefghijab </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn012.html</B> di atas) Suatu 
  algoritma bekerja pada array tersebut sbb <PRE>procedure lagi(a: integer; b: integer);
var t: integer;
begin
    t := (a+b) div 2;
    if (a &lt;= b) then begin
        write(X[t]);
        lagi (a,t-1);
        lagi (t+1,b);
    end 
end;
</PRE>dengan pemanggilan: <PRE>lagi(1,10);</PRE>Hasil yang akan dicetak adalah 
  <OL type=A>
    <LI>ebacdhfgij 
    <LI>abcdefghij 
    <LI>jihgfedcba 
    <LI>fghijabcde 
    <LI>cdefghijab </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn012.html</B> di atas) Suatu 
  algoritma bekerja pada array tersebut sbb <PRE>for i := 2 to 9 do
    swap(X[i-1],X[i+1]; // prosedur swap menukarkan kedua 
                        // isi elemen array tsb
for i := 1 to 10 do write(X[i]); 
</PRE>Hasil yang akan dicetak adalah 
  <OL type=A>
    <LI>cdefghijab 
    <LI>ebacdhfgij 
    <LI>abcdefghij 
    <LI>jihgfedcba 
    <LI>fghijabcde </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn013.html</B> di atas) Jika 
  berikutnya masuk no 5 berukuran 25 m, akan ditempatkan dimanakah no 5? 
  <OL type=A>
    <LI>Sebelah kanan no 3 
    <LI>Antara no 1 dan no 3 
    <LI>Antara no 3 dan no 4 
    <LI>Tidak ada ruang yang kosong dan bisa ditempati 
    <LI>Antara no 2 dan no 3 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn013.html</B> di atas) Jika 
  berikutnya masuk no 6 berukuran 40 m, akan ditempatkan dimanakah no 6? 
  <OL type=A>
    <LI>Tidak ada ruang yang kosong dan bisa ditempati 
    <LI>Sebelah kanan no 3 
    <LI>Antara no 1 dan no 3 
    <LI>Antara no 3 dan no 4 
    <LI>Antara no 2 dan no 3 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn013.html</B> di atas) Jika 
  berikutnya keluar no 1 dan masuk no 6 berukuran 40 m, akan ditempatkan 
  dimanakah no 6? 
  <OL type=A>
    <LI>Tidak ada ruang yang kosong dan bisa ditempati 
    <LI>Sebelah kanan no 3 
    <LI>Sebelah kiri no 4 
    <LI>Antara no 3 dan no 4 
    <LI>Antara no 2 dan 3</LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn013.html</B> di atas) Jika 
  aturannya diganti, mencari yang "sisa ruangannya yang sekecil-kecilnya" lalu 
  masuk no 6 berukuran 40 m, akan ditempatkan dimanakah no 6? 
  <OL type=A>
    <LI>Antara no 1 dan no 3 
    <LI>Antara no 2 dan no 3 
    <LI>Antara no 1 dan no 2 
    <LI>Tidak ada ruang yang kosong dan bisa ditempati 
    <LI>Di kanan no 3 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn014.html</B> di atas) Suatu hari 
  sebelum jam praktek, datanglah pasien-pasien berturut-turut (dengan bilangan 
  prioritas dituliskan dalam kurung): Amir (3), Andi (3), Maya (2), Ali (4), 
  Siska (3), dan Zaenal (1). Kemudian, setelah dua pasien urutan pertama selesai 
  diperiksa, siapakah pasien berikutnya yang akan diperiksa? 
  <OL type=A>
    <LI>Andi 
    <LI>Amir 
    <LI>Ali 
    <LI>Siska 
    <LI>Maya </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn014.html</B> di atas) Suatu hari 
  sebelum jam praktek, datanglah pasien-pasien berturut-turut (dengan bilangan 
  prioritas dituliskan dalam kurung): Amir (3), Andi (3), Maya (2), Ali (4), 
  Siska (3), dan Zaenal (1). Selanjutnya, setelah Dokter Eko selesai melayani 
  pasien ketiga, berturut-turut datang pula Yoyo (2), Kurnia (3), dan Endah (4). 
  Siapakah yang berada pada posisi ke empat? <FONT color=red>[Soal ini dianulir 
  karena tidak ada jawaban yang benar]</FONT> 
  <OL type=A>
    <LI>Kurnia 
    <LI>Siska 
    <LI>Andi 
    <LI>Yoyo 
    <LI>Amir </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn014.html</B> di atas) Suatu hari 
  sebelum jam praktek, datanglah pasien-pasien berturut-turut (dengan bilangan 
  prioritas dituliskan dalam kurung): Amir (3), Andi (3), Maya (2), Ali (4), 
  Siska (3), dan Zaenal (1). Selanjutnya, setelah Dokter Eko selesai melayani 
  pasien ketiga, berturut-turut datang pula Yoyo (2), Kurnia (3), dan Endah (4). 
  Berapa orangkah yang datang setelah Maya tapi kemudian mendahului Maya dalam 
  antrian? 
  <OL type=A>
    <LI>4 
    <LI>1 
    <LI>2 
    <LI>3 
    <LI>5 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn014.html</B> di atas) Suatu hari 
  sebelum jam praktek, datanglah pasien-pasien berturut-turut (dengan bilangan 
  prioritas dituliskan dalam kurung): Amir (3), Andi (3), Maya (2), Ali (4), 
  Siska (3), dan Zaenal (1). Selanjutnya, setelah Dokter Eko selesai melayani 
  pasien ketiga, berturut-turut datang pula Yoyo (2), Kurnia (3), dan Endah (4). 
  Pada urutan keberapakah Maya setelah itu? 
  <OL type=A>
    <LI>4 
    <LI>2 
    <LI>3 
    <LI>5 
    <LI>6 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn015.html</B> di atas) Kali ini Pak 
  Fauzan menggunakan 28 lembar kartu yang dinomori 1 s.d. 28 dan terurut 
  terbalik (28 s.d. 1). Pada kolom keberapakah kartu bernomor 12? 
  <OL type=A>
    <LI>6 
    <LI>5 
    <LI>4 
    <LI>3 
    <LI>2 </LI></OL>
  <LI>(Soal ini mengacu pada <B>Deskripsi osn015.html</B> di atas) Kali ini Pak 
  Fauzan menggunakan 28 lembar kartu yang dinomori bilangan-bilangan kelipatan 3 
  (yaitu: 3, 6, 9, dst) sesuai urutan kartu. Pada kolom keberapakah kartu 
  bernomor 45? 
  <OL type=A>
    <LI>4 
    <LI>6 
    <LI>5 
    <LI>3 
    <LI>2 </LI></OL></LI></OL>
<HR>
</BODY></HTML>
