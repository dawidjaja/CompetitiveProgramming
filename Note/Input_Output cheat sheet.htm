<html><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
    <title>Input/Output cheat sheet.</title>
    <link rel="stylesheet" type="text/css" href="Input_Output%20cheat%20sheet_files/style.css">
</head>

<body>
<table class="header" align="center" cellspacing="0">
    <tbody><tr>
        <td width="64"><img src="Input_Output%20cheat%20sheet_files/logo.gif"></td>
        <td><div class="title">Input/Output cheat sheet</div></td>
    </tr>
</tbody></table>
<table class="body" align="center" cellspacing="0">

<tbody><tr><td class="category">Input in C</td></tr>
<tr>
    <td class="content" style="padding-left: 50px">
        These examples require the following line at the top:
        <div class="code">
            #include &lt;stdio.h&gt;
        </div>
        <br>

        Read an integer, skipping leading whitespace.
        <div class="code">
            int x;<br>
            scanf( "%d", &amp;x );
        </div>
        <br>

        Read integers, one at a time, skipping whitespace, until
        the end of input.
        <div class="code">
            int x;<br>
            while( scanf( "%d", &amp;x ) )<br>
            {<br>
            &nbsp;&nbsp;&nbsp;&nbsp;/* Do something with x. */<br>
            }
        </div>
        <br>

        Read a character, skipping leading whitespace.
        <div class="code">
            char c;<br>
            scanf( "%c", &amp;c );
        </div>
        <br>

        Read the next character, whatever it is. Returns -1 when
        there is nothing left to read.
        <div class="code">
            int c = getchar();
        </div>
        <br>

        Read characters one by one until the end of input.
        <div class="code">
            int c;<br>
            while( ( c = getchar() ) &gt;= 0 )<br>
            {<br>
            &nbsp;&nbsp;&nbsp;&nbsp;char ch = ( char )c;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;/* Do something with ch. */<br>
            }
        </div>
        <br>

        Read a word, skipping leading whitespace. Make sure <tt>w[]</tt> has enough space.
        <div class="code">
            char w[1024];<br>
            scanf( "%s", w );
        </div>
        <br>

        Read one line at a time until the end of input. This code gives a warning at
        compile time. Make sure <tt>s[]</tt> has enough space.
        <div class="code">
            char s[1024];<br>
            while( gets( s ) )<br>
            {<br>
            &nbsp;&nbsp;&nbsp;&nbsp;/* s[] contains the line without the '\n' at the end. */<br>
            }
        </div>
        <br>
    </td>
</tr>

<tr><td class="category">Output in C</td></tr>
<tr>
    <td class="content" style="padding-left: 50px">
        <div class="code">
            int p = 17;<br>
            long long x = 69;<br>
            printf( "Case #%d: %Ld\n", p, x );
        </div>
        Result: "<tt>Case #17: 69</tt>".<br>
        <br>

        <div class="code">
            double x = 0.1234, y = 0.1235;<br>
            printf( "%.3f %.3f\n", x, y );
        </div>
        Result: "<tt>0.123 0.124</tt>".<br>
        <br>

        <div class="code">
            int x = 13;<br>
            printf( "%d|%4d|%04d|%-4d|%0*d|\n", x, x, x, x, 8, x );
        </div>
        Result: "<tt>13|  13|0013|13  |00000013|</tt>".<br>
        <br>
    </td>
</tr>

<tr><td class="category">Input in C++</td></tr>
<tr>
    <td class="content" style="padding-left: 50px">
        These examples require the following lines at the top:
        <div class="code">
            #include &lt;iostream&gt;<br>
            #include &lt;string&gt;<br>
            using namespace std;
        </div>
        <br>

        Read an integer, skipping leading whitespace.
        <div class="code">
            int x;<br>
            cin &gt;&gt; x;
        </div>
        <br>

        Read integers, one at a time, skipping whitespace, until
        the end of input.
        <div class="code">
            int x;<br>
            while( cin &gt;&gt; x )<br>
            {<br>
            &nbsp;&nbsp;&nbsp;&nbsp;// Do something with x.<br>
            }
        </div>
        <br>

        Read a character, skipping leading whitespace.
        <div class="code">
            char c;<br>
            cin &gt;&gt; c;
        </div>
        <br>

        Read a word, skipping leading whitespace.
        <div class="code">
            string w;<br>
            cin &gt;&gt; w;
        </div>
        <br>

        Read one line at a time until the end of input.
        <div class="code">
            string s;<br>
            while( getline( cin, s ) )<br>
            {<br>
            &nbsp;&nbsp;&nbsp;&nbsp;// s contains the line without the '\n' at the end.<br>
            }
        </div>
        <br>
    </td>
</tr>

<tr><td class="category">Output in C++</td></tr>
<tr>
    <td class="content" style="padding-left: 50px">
        <div class="code">
            int p = 17;<br>
            long long x = 69;<br>
            cout &lt;&lt; "Case #" &lt;&lt; p &lt;&lt; ": " &lt;&lt; x &lt;&lt; endl;
        </div>
        Result: "<tt>Case #17: 69</tt>".<br>
        <br>

        For more complicated output formatting, <tt>printf()</tt> is probably
        the best choice (see above).<br>
        <br>
    </td>
</tr>

<tr><td class="category">Input in Java 1.5</td></tr>
<tr>
    <td class="content" style="padding-left: 50px">
        These examples require the following lines at the top:
        <div class="code">
            import java.io.*;<br>
            import java.util.*;<br>
            Scanner in = new Scanner( System.in );
        </div>
        <br>

        Read an integer, skipping leading whitespace.
        <div class="code">
            int x = in.nextInt();
        </div>
        <br>

        Read integers, one at a time, skipping whitespace, until
        the end of input.
        <div class="code">
            while( in.hasNextInt() )<br>
            {<br>
            &nbsp;&nbsp;&nbsp;&nbsp;int x = in.nextInt();<br>
            &nbsp;&nbsp;&nbsp;&nbsp;// Do something with x.<br>
            }
        </div>
        <br>

        Read the next character, whatever it is. Returns -1 if there is nothing more to read.
        <div class="code">
            int c = System.in.read();
        </div>
        <br>

        Read a word, skipping leading whitespace.
        <div class="code">
            String w = in.next();
        </div>
        <br>

        Read one line at a time until the end of input.
        <div class="code">
            while( in.hasNextLine() )<br>
            {<br>
            &nbsp;&nbsp;&nbsp;&nbsp;String s = in.nextLine();<br>
            &nbsp;&nbsp;&nbsp;&nbsp;// s contains the line, including the '\n' at the end.<br>
            }
        </div>
        <br>
    </td>
</tr>

<tr><td class="category">Output in Java 1.5</td></tr>
<tr>
    <td class="content" style="padding-left: 50px">
        <div class="code">
            int p = 17;<br>
            long x = 69;<br>
            System.out.println( "Case #" + p + ": " + x );
        </div>
        Result: "<tt>Case #17: 69</tt>".<br>
        <br>

        <div class="code">
            double x = 0.1234, y = 0.1235;<br>
            System.out.printf( "%.3f %.3f\n", x, y );
        </div>
        Result: "<tt>0.123 0.124</tt>".<br>
        <br>

        <div class="code">
            int x = 13;<br>
            System.out.printf( "%d|%4d|%04d|%-4d|%0*d|\n", x, x, x, x, 8, x );
        </div>
        Result: "<tt>13|  13|0013|13  |00000013|</tt>".<br>
        <br>
    </td>
</tr>

</tbody></table>


</body></html>